---
- name: Setup Environment for Excel Report Generation
  hosts: web_servers
  become: yes
  tasks:
    - name: Determine RHEL version and appropriate Python interpreter
      set_fact:
        is_rhel_8_or_later: "{{ ansible_facts['distribution_major_version'] | int >= 8 }}"

    - name: Install Python3 and pip for RHEL 7 using yum
      yum:
        name:
          - python36
          - python36-pip
        state: present
      when: not is_rhel_8_or_later

    - name: Install Python3 and pip for RHEL 8 or later using dnf
      dnf:
        name:
          - python3
          - python3-pip
        state: present
      when: is_rhel_8_or_later

- name: Check SSSD Configuration and Collect Data
  hosts: web_servers
  gather_facts: false
  tasks:
    - name: Check SSSD configuration
      shell: "grep -i '^simple_allow_groups' /etc/sssd/sssd.conf | cut -d' ' -f3"
      register: sssd_check_result
      ignore_errors: yes

    - name: Write SSSD data to a temp file on localhost
      lineinfile:
        path: "/tmp/sssd_data_temp"
        line: "{{ inventory_hostname }}|{{ 'Config OK' if sssd_check_result.rc == 0 else 'Config Error' }}|{{ sssd_check_result.stdout | default('N/A') }}"
      delegate_to: localhost

- name: Generate Excel Report on Localhost
  hosts: localhost
  gather_facts: false
  tasks:
    - name: Read SSSD data from temp file
      ansible.builtin.slurp:
        src: "/tmp/sssd_data_temp"
      register: sssd_data_file

    - name: Decode SSSD data
      set_fact:
        sssd_data: "{{ sssd_data_file['content'] | b64decode | split('\n') | select('!=', '') | list }}"

    - name: Generate Excel report for SSSD configuration using Python script
      command: "python3 ad_report_global.py '{{ sssd_data | to_json }}'"

- name: Commit Excel reports to Git repository
  hosts: localhost
  gather_facts: false
  tasks:
    - name: Add Excel reports to Git
      command: "git add ."
      args:
        chdir: "{{ report_path_local }}"
      run_once: true

    - name: Commit Excel reports to Git
      command: "git commit -m 'Automatic update Excel Report'"
      args:
        chdir: "{{ report_path_local }}"
      run_once: true

    - name: Push Excel reports to Git
      command: "git push origin main"
      args:
        chdir: "{{ report_path_local }}"
      run_once: true
